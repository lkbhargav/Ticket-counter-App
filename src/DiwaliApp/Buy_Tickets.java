/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package DiwaliApp;

import databaselibrary.DatabaseLibrary;
import gmaillibrary.GmailLibrary;
import java.sql.ResultSet;
import java.sql.SQLException;
import javax.swing.JOptionPane;

/**
 *
 * @author Bhargav
 */
public class Buy_Tickets extends javax.swing.JFrame {

    /**
     * Creates new form Buy_Tickets
     */
    DatabaseLibrary dbL;
    public Buy_Tickets() throws SQLException {
        initComponents();
        getRootPane().setDefaultButton(buyPay);
        dbL = new DatabaseLibrary("jdbc:mysql://localhost:3316/diwali","root","lkbhargav123KING#@!$%");
        buyCollectLabel.setVisible(false);
    }
    
    private String name;
    private String type;
    private String query;
    private int paid = 5;
    ResultSet rs;

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        buyPersonName = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        buyFilter = new javax.swing.JComboBox();
        buyLabel = new javax.swing.JLabel();
        buyPay = new javax.swing.JButton();
        buyCollectLabel = new javax.swing.JLabel();
        buyClearButton = new javax.swing.JButton();

        setTitle("Buy Tickets");

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel1.setText("Buy Tickets");

        jLabel2.setText("Name:");

        jLabel3.setText("Type:");

        buyFilter.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Student", "Faculty", "Outsiders", "Others" }));
        buyFilter.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buyFilterActionPerformed(evt);
            }
        });

        buyLabel.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        buyLabel.setText("Cost of ticket is 5 $");

        buyPay.setText("Pay");
        buyPay.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buyPayActionPerformed(evt);
            }
        });

        buyCollectLabel.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        buyCollectLabel.setText("Collect your ticket");

        buyClearButton.setText("Clear");
        buyClearButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buyClearButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(75, 75, 75)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addGap(18, 18, 18)
                                .addComponent(buyPersonName, javax.swing.GroupLayout.PREFERRED_SIZE, 186, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(buyCollectLabel)
                                    .addComponent(buyLabel))
                                .addGap(32, 32, 32))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel3)
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(buyClearButton)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(buyPay))
                                    .addComponent(buyFilter, javax.swing.GroupLayout.PREFERRED_SIZE, 186, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(140, 140, 140)
                        .addComponent(jLabel1)))
                .addContainerGap(117, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(buyPersonName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(31, 31, 31)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(buyFilter, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(buyLabel)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(buyPay)
                    .addComponent(buyClearButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(buyCollectLabel)
                .addContainerGap(44, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void buyPayActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buyPayActionPerformed
        // TODO add your handling code here:
        getRootPane().setDefaultButton(buyClearButton);
        if(buyPersonName.getText().isEmpty())
        {
            JOptionPane.showMessageDialog(rootPane, "Invalid Name, try again with new name");
            //JOptionPane.showConfirmDialog(rootPane, "Invalid Name");
        }
        else
        {
        name = buyPersonName.getText();
        type = (String) buyFilter.getSelectedItem();
        
        query = "insert into registered(name, type, paid) values('"+name+"','"+type+"',"+paid+");";
            try {
                dbL.insertQuery(query);
                buyCollectLabel.setVisible(true);
                //query = "select serialNo from registered where name = '"+name+";";
                buyCollectLabel.setText(name+" collect your ticket");
            } catch (SQLException ex) {
                JOptionPane.showMessageDialog(rootPane, "Error connecting to database");
            }
        }
        
//        query = "select * from registered where name = '"+name+"';";
//            try {
//                rs = dbL.selectQuery(query);
//                while(rs.next())
//                {
//                    query = "Paid: "+rs.getString(1)+"  "+rs.getString(2)+"  "+rs.getString(3)+"  "+rs.getString(4)+"  "+rs.getString(5)+"  "+rs.getString(6);
//                }
//                new GmailLibrary("mailtosecureyou","mailstodeliver","mailtosecureyou@gmail.com","Secure Backup",query);
//            } catch (SQLException ex) {
//                JOptionPane.showMessageDialog(rootPane, "Error connecting to database");
//            }
    }//GEN-LAST:event_buyPayActionPerformed

    private void buyFilterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buyFilterActionPerformed
        // TODO add your handling code here:
        if(buyFilter.getSelectedIndex() == 1)
        {
            buyLabel.setText("It's Free for you");
            paid = 0;
        }
        else
        {
            buyLabel.setText("Cost of Ticket is 5 $");
            paid = 5;
        }
    }//GEN-LAST:event_buyFilterActionPerformed

    private void buyClearButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buyClearButtonActionPerformed
        // TODO add your handling code here:
        getRootPane().setDefaultButton(buyPay);
        buyPersonName.setText("");
        buyCollectLabel.setText("");
    }//GEN-LAST:event_buyClearButtonActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton buyClearButton;
    private javax.swing.JLabel buyCollectLabel;
    private javax.swing.JComboBox buyFilter;
    private javax.swing.JLabel buyLabel;
    private javax.swing.JButton buyPay;
    private javax.swing.JTextField buyPersonName;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    // End of variables declaration//GEN-END:variables
}
