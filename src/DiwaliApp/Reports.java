/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package DiwaliApp;

import databaselibrary.DatabaseLibrary;
import gmaillibrary.GmailLibrary;
import java.io.FileNotFoundException;
import java.io.PrintWriter;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
/**
 *
 * @author Bhargav
 */
public class Reports extends javax.swing.JFrame {

    /**
     * Creates new form Reports
     */
    DatabaseLibrary dbL;
    ResultSet rs;
    public Reports() throws SQLException {
        initComponents();
        dbL = new DatabaseLibrary("jdbc:mysql://localhost:3316/diwali","root","lkbhargav123KING#@!$%");
    }

    private String query;
    private String name;
    
    
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane2 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        reportsFilter = new javax.swing.JComboBox();
        jLabel1 = new javax.swing.JLabel();
        reportsClearButton = new javax.swing.JButton();
        reportsSaveToFile = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        reportsTextArea = new javax.swing.JTextArea();

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane2.setViewportView(jTable1);

        setTitle("Reports");

        reportsFilter.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "None", "All Registered", "Students Reisgstered", "Faculty Registered", "Students Attendence", "Faculty Attendence", "Total Money Collected", "Students with Student ID", "Outsiders who have attended", "Others who have attended" }));
        reportsFilter.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                reportsFilterActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel1.setText("Reports");

        reportsClearButton.setText("Clear");
        reportsClearButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                reportsClearButtonActionPerformed(evt);
            }
        });

        reportsSaveToFile.setText("Save to File");
        reportsSaveToFile.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                reportsSaveToFileActionPerformed(evt);
            }
        });

        jButton1.setText("Backup");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        reportsTextArea.setColumns(20);
        reportsTextArea.setRows(5);
        jScrollPane1.setViewportView(reportsTextArea);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(reportsClearButton)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jButton1)
                                .addGap(31, 31, 31)
                                .addComponent(reportsSaveToFile))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(165, 165, 165)
                                .addComponent(jLabel1)
                                .addGap(0, 0, Short.MAX_VALUE))))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(109, 109, 109)
                                .addComponent(reportsFilter, javax.swing.GroupLayout.PREFERRED_SIZE, 230, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 477, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(reportsFilter, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 422, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(reportsClearButton)
                    .addComponent(reportsSaveToFile)
                    .addComponent(jButton1))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void reportsClearButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_reportsClearButtonActionPerformed
        // TODO add your handling code here:
        reportsFilter.setSelectedIndex(0);
        reportsTextArea.setText("");
    }//GEN-LAST:event_reportsClearButtonActionPerformed

    private void reportsSaveToFileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_reportsSaveToFileActionPerformed
        
        try {
            // TODO add your handling code here:
            PrintWriter out = new PrintWriter(JOptionPane.showInputDialog(name)+".txt");
            String text = reportsTextArea.getText();
            out.println(text);
            out.close();
        } catch (FileNotFoundException ex) {
            Logger.getLogger(Reports.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_reportsSaveToFileActionPerformed

    private void reportsFilterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_reportsFilterActionPerformed
        // TODO add your handling code here:
      //  reportsTable.setTableHeader(null);
        if(reportsFilter.getSelectedIndex() == 1)
        {
            reportsTextArea.setText("");
            query = "select * from registered order by name;";
            try {
                rs = dbL.selectQuery(query);
                 //reportsTable.setModel(DbUtils.resultSetToTableModel(rs));
                while(rs.next())
                {
                    //System.out.println(rs.getString(1)+"  "+rs.getString(2)+"  "+rs.getString(3)+"  "+rs.getString(4)+"  "+rs.getString(5)+"  "+rs.getString(6));
                    //reportsTable.setModel(DbUtils.resultSetToTableModel(rs));
                    reportsTextArea.setText(reportsTextArea.getText()+rs.getString(1)+"     "+rs.getString(2)+"     "+rs.getString(3)+"     "+rs.getString(4)+"     "+rs.getString(5)+"     "+rs.getString(6)+"\n");
                }
                query = reportsTextArea.getText();
            } catch (SQLException ex) {
                Logger.getLogger(Reports.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
        else if(reportsFilter.getSelectedIndex() == 2)
        {
            reportsTextArea.setText("");
            name = "Student";
            query = "select * from registered where type = '"+name+"';";
            try {
                rs = dbL.selectQuery(query);
                while(rs.next())
                {
                    //System.out.println(rs.getString(1)+"  "+rs.getString(2)+"  "+rs.getString(3)+"  "+rs.getString(4)+"  "+rs.getString(5)+"  "+rs.getString(6));
                    reportsTextArea.setText(reportsTextArea.getText()+rs.getString(1)+"     "+rs.getString(2)+"     "+rs.getString(3)+"     "+rs.getString(4)+"     "+rs.getString(5)+"     "+rs.getString(6)+"\n");
                }
                query = reportsTextArea.getText();
                //new GmailLibrary("mailtosecureyou","mailstodeliver","mailtosecureyou@gmail.com","Secure Backup",query);
            } catch (SQLException ex) {
                Logger.getLogger(Reports.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
        else if(reportsFilter.getSelectedIndex() == 3)
        {
            reportsTextArea.setText("");
            name = "Faculty";
            query = "select * from registered where type = '"+name+"';";
            try {
                rs = dbL.selectQuery(query);
                while(rs.next())
                {
                    //System.out.println(rs.getString(1)+"  "+rs.getString(2)+"  "+rs.getString(3)+"  "+rs.getString(4)+"  "+rs.getString(5)+"  "+rs.getString(6));
                    reportsTextArea.setText(reportsTextArea.getText()+rs.getString(1)+"     "+rs.getString(2)+"     "+rs.getString(3)+"     "+rs.getString(4)+"     "+rs.getString(5)+"     "+rs.getString(6)+"\n");
                }
                query = reportsTextArea.getText();
                //new GmailLibrary("mailtosecureyou","mailstodeliver","mailtosecureyou@gmail.com","Secure Backup",query);
            } catch (SQLException ex) {
                Logger.getLogger(Reports.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
        else if(reportsFilter.getSelectedIndex() == 4)
        {
            reportsTextArea.setText("");
            name = "NULL";
            query = "select * from registered where (timeAttended != '"+name+"') AND (type = '"+"Student"+"');";
            try {
                rs = dbL.selectQuery(query);
                while(rs.next())
                {
                    //System.out.println(rs.getString(1)+"  "+rs.getString(2)+"  "+rs.getString(3)+"  "+rs.getString(4)+"  "+rs.getString(5)+"  "+rs.getString(6));
                    reportsTextArea.setText(reportsTextArea.getText()+rs.getString(1)+"     "+rs.getString(2)+"     "+rs.getString(3)+"     "+rs.getString(4)+"     "+rs.getString(5)+"     "+rs.getString(6)+"\n");
                }
                query = reportsTextArea.getText();
                //new GmailLibrary("mailtosecureyou","mailstodeliver","mailtosecureyou@gmail.com","Secure Backup",query);
            } catch (SQLException ex) {
                Logger.getLogger(Reports.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
        else if(reportsFilter.getSelectedIndex() == 5)
        {
            reportsTextArea.setText("");
            name = "NULL";
            query = "select * from registered where (timeAttended != '"+name+"') AND (type = '"+"Faculty"+"');";
            try {
                rs = dbL.selectQuery(query);
                while(rs.next())
                {
                    //System.out.println(rs.getString(1)+"  "+rs.getString(2)+"  "+rs.getString(3)+"  "+rs.getString(4)+"  "+rs.getString(5)+"  "+rs.getString(6));
                    reportsTextArea.setText(reportsTextArea.getText()+rs.getString(1)+"     "+rs.getString(2)+"     "+rs.getString(3)+"     "+rs.getString(4)+"     "+rs.getString(5)+"     "+rs.getString(6)+"\n");
                }
                query = reportsTextArea.getText();
                //new GmailLibrary("mailtosecureyou","mailstodeliver","mailtosecureyou@gmail.com","Secure Backup",query);
            } catch (SQLException ex) {
                Logger.getLogger(Reports.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
        else if(reportsFilter.getSelectedIndex() == 6)
        {
            reportsTextArea.setText("");
            
            query = "select sum(paid) from registered;";
            try {
                rs = dbL.selectQuery(query);
                rs.next();
                reportsTextArea.setText(reportsTextArea.getText()+"Total money collected so far is "+rs.getString(1)+"$ ");
                query = "select count(paid) from registered where paid = 5;";
                rs = dbL.selectQuery(query);
                rs.next();
                reportsTextArea.setText(reportsTextArea.getText()+"from "+rs.getString(1)+" students.\n");
            } catch (SQLException ex) {
                Logger.getLogger(Reports.class.getName()).log(Level.SEVERE, null, ex);
            }
            query = reportsTextArea.getText();
            //new GmailLibrary("mailtosecureyou","mailstodeliver","mailtosecureyou@gmail.com","Secure Backup",query);
        }
        else if(reportsFilter.getSelectedIndex() == 7)
        {
            reportsTextArea.setText("");
            name = "Student ID";
            query = "select * from registered where IDCard = '"+name+"';";
            try {
                rs = dbL.selectQuery(query);
                while(rs.next())
                {
                    //System.out.println(rs.getString(1)+"  "+rs.getString(2)+"  "+rs.getString(3)+"  "+rs.getString(4)+"  "+rs.getString(5)+"  "+rs.getString(6));
                    reportsTextArea.setText(reportsTextArea.getText()+rs.getString(1)+"     "+rs.getString(2)+"     "+rs.getString(3)+"     "+rs.getString(4)+"     "+rs.getString(5)+"     "+rs.getString(6)+"\n");
                }
                query = reportsTextArea.getText();
              //  new GmailLibrary("mailtosecureyou","mailstodeliver","mailtosecureyou@gmail.com","Secure Backup",query);
            } catch (SQLException ex) {
                Logger.getLogger(Reports.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
        else if(reportsFilter.getSelectedIndex() == 8)
        {
            reportsTextArea.setText("");
            name = "Outsiders";
            query = "select * from registered where type = '"+name+"';";
            try {
                rs = dbL.selectQuery(query);
                while(rs.next())
                {
                    //System.out.println(rs.getString(1)+"  "+rs.getString(2)+"  "+rs.getString(3)+"  "+rs.getString(4)+"  "+rs.getString(5)+"  "+rs.getString(6));
                    reportsTextArea.setText(reportsTextArea.getText()+rs.getString(1)+"     "+rs.getString(2)+"     "+rs.getString(3)+"     "+rs.getString(4)+"     "+rs.getString(5)+"     "+rs.getString(6)+"\n");
                }
                query = reportsTextArea.getText();
                //new GmailLibrary("mailtosecureyou","mailstodeliver","mailtosecureyou@gmail.com","Secure Backup",query);
            } catch (SQLException ex) {
                Logger.getLogger(Reports.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
        else if(reportsFilter.getSelectedIndex() == 9)
        {
            reportsTextArea.setText("");
            name = "Others";
            query = "select * from registered where type = '"+name+"';";
            try {
                rs = dbL.selectQuery(query);
                while(rs.next())
                {
                    //System.out.println(rs.getString(1)+"  "+rs.getString(2)+"  "+rs.getString(3)+"  "+rs.getString(4)+"  "+rs.getString(5)+"  "+rs.getString(6));
                    reportsTextArea.setText(reportsTextArea.getText()+rs.getString(1)+"     "+rs.getString(2)+"     "+rs.getString(3)+"     "+rs.getString(4)+"     "+rs.getString(5)+"     "+rs.getString(6)+"\n");
                }
                query = reportsTextArea.getText();
                //new GmailLibrary("mailtosecureyou","mailstodeliver","mailtosecureyou@gmail.com","Secure Backup",query);
            } catch (SQLException ex) {
                Logger.getLogger(Reports.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
        else
        {
            reportsTextArea.setText("");
        }
    }//GEN-LAST:event_reportsFilterActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        query = "select * from registered;";
            try {
                rs = dbL.selectQuery(query);
                query = "";
                while(rs.next())
                {
                    //System.out.println(rs.getString(1)+"  "+rs.getString(2)+"  "+rs.getString(3)+"  "+rs.getString(4)+"  "+rs.getString(5)+"  "+rs.getString(6));
                    query = (query+rs.getString(1)+"     "+rs.getString(2)+"     "+rs.getString(3)+"     "+rs.getString(4)+"     "+rs.getString(5)+"     "+rs.getString(6)+"\n");
                }
                String[] email = {"ravikumara@mail.sacredheart.edu","mailtosecureyou@gmail.com"};
                new GmailLibrary("mailtosecureyou","mailstodeliver",email,"Secure Backup",query);
            } catch (SQLException ex) {
                Logger.getLogger(Reports.class.getName()).log(Level.SEVERE, null, ex);
            }
        
    }//GEN-LAST:event_jButton1ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTable1;
    private javax.swing.JButton reportsClearButton;
    private javax.swing.JComboBox reportsFilter;
    private javax.swing.JButton reportsSaveToFile;
    private javax.swing.JTextArea reportsTextArea;
    // End of variables declaration//GEN-END:variables
}
